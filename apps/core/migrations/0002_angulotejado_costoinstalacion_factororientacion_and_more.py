# Generated by Django 4.2.23 on 2025-07-29 08:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnguloTejado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('angulo', models.IntegerField(unique=True, verbose_name='Ángulo (grados)')),
                ('factor_eficiencia', models.FloatField(help_text='Factor de eficiencia para este ángulo (1.0 = óptimo)', verbose_name='Factor de Eficiencia')),
                ('imagen_svg', models.CharField(blank=True, help_text='Nombre del archivo SVG (ej: angulo-30.svg)', max_length=100, verbose_name='Nombre Imagen SVG')),
                ('descripcion', models.CharField(blank=True, help_text="Descripción del ángulo (ej: 'Óptimo para Argentina')", max_length=200, verbose_name='Descripción')),
                ('recomendado', models.BooleanField(default=False, help_text='Marcar si es el ángulo más recomendado', verbose_name='Ángulo Recomendado')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Ángulo de Tejado',
                'verbose_name_plural': 'Ángulos de Tejado',
                'ordering': ['angulo'],
            },
        ),
        migrations.CreateModel(
            name='CostoInstalacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango_potencia', models.CharField(choices=[('0-3', '0 a 3 kW'), ('3-5', '3 a 5 kW'), ('5-10', '5 a 10 kW'), ('10+', 'Más de 10 kW')], max_length=10, unique=True, verbose_name='Rango de Potencia')),
                ('potencia_min', models.FloatField(help_text='Potencia mínima del rango en kW', verbose_name='Potencia Mínima (kW)')),
                ('potencia_max', models.FloatField(blank=True, help_text="Potencia máxima del rango en kW (dejar vacío para 'más de X')", null=True, verbose_name='Potencia Máxima (kW)')),
                ('costo_por_kw', models.FloatField(help_text='Costo de instalación por kW en este rango', verbose_name='Costo por kW (USD)')),
                ('costo_bateria_por_kw', models.FloatField(default=650, help_text='Costo adicional por kW para sistema de baterías', verbose_name='Costo Batería por kW (USD)')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción adicional del rango de instalación', verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Costo de Instalación',
                'verbose_name_plural': 'Costos de Instalación',
                'ordering': ['potencia_min'],
            },
        ),
        migrations.CreateModel(
            name='FactorOrientacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orientacion', models.CharField(choices=[('N', 'Norte'), ('NE', 'Noreste'), ('E', 'Este'), ('SE', 'Sureste'), ('S', 'Sur'), ('SO', 'Suroeste'), ('O', 'Oeste'), ('NO', 'Noroeste')], max_length=2, unique=True, verbose_name='Orientación')),
                ('factor_eficiencia', models.FloatField(help_text='Factor de eficiencia por orientación (1.0 = 100% eficiencia)', verbose_name='Factor de Eficiencia')),
                ('angulo_solar', models.IntegerField(help_text='Ángulo respecto al norte (0° = Norte)', verbose_name='Ángulo Solar (grados)')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Factor de Orientación',
                'verbose_name_plural': 'Factores de Orientación',
                'ordering': ['angulo_solar'],
            },
        ),
        migrations.CreateModel(
            name='FactorUbicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia', models.CharField(choices=[('caba', 'Ciudad Autónoma de Buenos Aires'), ('buenos_aires', 'Buenos Aires'), ('catamarca', 'Catamarca'), ('chaco', 'Chaco'), ('chubut', 'Chubut'), ('cordoba', 'Córdoba'), ('corrientes', 'Corrientes'), ('entre_rios', 'Entre Ríos'), ('formosa', 'Formosa'), ('jujuy', 'Jujuy'), ('la_pampa', 'La Pampa'), ('la_rioja', 'La Rioja'), ('mendoza', 'Mendoza'), ('misiones', 'Misiones'), ('neuquen', 'Neuquén'), ('rio_negro', 'Río Negro'), ('salta', 'Salta'), ('san_juan', 'San Juan'), ('san_luis', 'San Luis'), ('santa_cruz', 'Santa Cruz'), ('santa_fe', 'Santa Fe'), ('santiago_del_estero', 'Santiago del Estero'), ('tierra_del_fuego', 'Tierra del Fuego'), ('tucuman', 'Tucumán')], max_length=50, unique=True, verbose_name='Provincia')),
                ('factor_irradiacion', models.FloatField(help_text='Factor multiplicador de irradiación (1.0 = promedio nacional)', verbose_name='Factor de Irradiación')),
                ('irradiacion_promedio', models.FloatField(help_text='Irradiación solar promedio diaria', verbose_name='Irradiación Promedio (kWh/m²/día)')),
                ('descripcion', models.TextField(blank=True, help_text='Información adicional sobre la irradiación en esta provincia', verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Factor de Ubicación',
                'verbose_name_plural': 'Factores de Ubicación',
                'ordering': ['provincia'],
            },
        ),
        migrations.CreateModel(
            name='SimuladorConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo para identificar esta configuración', max_length=100, verbose_name='Nombre de Configuración')),
                ('horas_sol_promedio', models.FloatField(default=5.8, help_text='Promedio de horas de sol pico diarias en Argentina', verbose_name='Horas de Sol Promedio (por día)')),
                ('eficiencia_panel', models.FloatField(default=0.2, help_text='Eficiencia promedio de paneles solares (0.20 = 20%)', verbose_name='Eficiencia de Paneles (%)')),
                ('potencia_panel', models.IntegerField(default=400, help_text='Potencia en vatios de cada panel solar estándar', verbose_name='Potencia por Panel (W)')),
                ('precio_kwh', models.FloatField(default=0.12, help_text='Precio promedio del kWh en Argentina (USD)', verbose_name='Precio kWh (USD)')),
                ('consumo_coche_electrico', models.IntegerField(default=2500, help_text='Consumo adicional anual estimado para coche eléctrico', verbose_name='Consumo Coche Eléctrico (kWh/año)')),
                ('autoconsumo_con_bateria', models.FloatField(default=0.8, help_text='Porcentaje de autoconsumo con sistema de baterías (0.80 = 80%)', verbose_name='Autoconsumo con Batería (%)')),
                ('autoconsumo_sin_bateria', models.FloatField(default=0.6, help_text='Porcentaje de autoconsumo sin sistema de baterías (0.60 = 60%)', verbose_name='Autoconsumo sin Batería (%)')),
                ('compensacion_excedentes', models.FloatField(default=0.5, help_text='Factor de compensación por excedentes (0.5 = 50% del precio kWh)', verbose_name='Factor Compensación Excedentes')),
                ('degradacion_anual', models.FloatField(default=0.005, help_text='Degradación anual de paneles solares (0.005 = 0.5%)', verbose_name='Degradación Anual Paneles')),
                ('activa', models.BooleanField(default=True, help_text='Solo una configuración puede estar activa a la vez', verbose_name='Configuración Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Configuración del Simulador',
                'verbose_name_plural': 'Configuraciones del Simulador',
                'ordering': ['-activa', '-fecha_actualizacion'],
            },
        ),
        migrations.CreateModel(
            name='TipoTejado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('plano', 'Techo Plano'), ('un_agua', 'Techo a Un Agua'), ('dos_aguas', 'Techo a Dos Aguas'), ('cuatro_aguas', 'Techo a Cuatro Aguas')], max_length=20, unique=True, verbose_name='Tipo de Tejado')),
                ('factor_complejidad', models.FloatField(default=1.0, help_text='Factor que afecta el costo de instalación (1.0 = sin incremento)', verbose_name='Factor de Complejidad')),
                ('angulo_optimo', models.IntegerField(help_text='Ángulo de inclinación óptimo para este tipo de tejado', verbose_name='Ángulo Óptimo (grados)')),
                ('imagen_svg', models.CharField(blank=True, help_text='Nombre del archivo SVG (ej: tejado-plano.svg)', max_length=100, verbose_name='Nombre Imagen SVG')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Tipo de Tejado',
                'verbose_name_plural': 'Tipos de Tejado',
                'ordering': ['tipo'],
            },
        ),
    ]
